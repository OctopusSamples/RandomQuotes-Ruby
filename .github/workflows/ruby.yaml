jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: '0'
    - uses: actions/setup-ruby@v1
      with:
        ruby-version: '3.0'
    - run: gem install bundler
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: 5.x
    - id: determine_version
      name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.7
    - name: Install Octopus Deploy CLI
      uses: OctopusDeploy/install-octocli@v1.1.1
      with:
        version: latest
    - name: Install Dependencies
      run: bundle install
      shell: bash
    - name: List Dependencies
      run: gem dep > dependencies.txt
      shell: bash
    - name: Collect Dependencies
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies
        path: dependencies.txt
    - name: List Dependency Updates
      run: gem outdated >  dependencyUpdates.txt
      shell: bash
    - name: Collect Dependency Updates
      uses: actions/upload-artifact@v2
      with:
        name: Dependencies Updates
        path: dependencyUpdates.txt
    - name: Test
      run: gem install rspec_junit_formatter; rspec --format RspecJunitFormatter --out results.xml || true
      shell: bash
    - if: always()
      name: Report
      uses: dorny/test-reporter@v1
      with:
        name: Ruby Tests
        path: results.xml
        reporter: java-junit
        fail-on-error: 'false'
    - name: Package
      run: |-
        SOURCEPATH=.
        OUTPUTPATH=.
        octo pack \
         --basePath ${SOURCEPATH} \
         --outFolder ${OUTPUTPATH} \
         --id RandomQuotes-Ruby \
         --version ${{ steps.determine_version.outputs.semVer }} \
         --format zip \
         --overwrite \
         --include '**/*.rb \
         --include '**/*.html' \
         --include '**/*.htm' \
         --include '**/*.css' \
         --include '**/*.js' \
         --include '**/*.min' \
         --include '**/*.map' \
         --include '**/*.sql' \
         --include '**/*.png' \
         --include '**/*.jpg' \
         --include '**/*.jpeg' \
         --include '**/*.gif' \
         --include '**/*.json' \
         --include '**/*.env' \
         --include '**/*.txt' \
         --include '**/*.Procfile'
      shell: bash
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: create_release
      name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.determine_version.outputs.semVer }}.${{ github.run_number }}
        release_name: Release ${{ steps.determine_version.outputs.semVer }}.${{ github.run_number }}
        draft: 'false'
        prerelease: 'false'
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: RandomQuotes-Ruby.${{ steps.determine_version.outputs.semVer }}.zip
        asset_name: RandomQuotes-Ruby.${{ steps.determine_version.outputs.semVer }}.zip
        asset_content_type: application/octet-stream
    - name: Push to Octopus
      uses: OctopusDeploy/push-package-action@v1.1.1
      with:
        api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
        packages: RandomQuotes-Ruby.${{ steps.determine_version.outputs.semVer }}.zip
        server: ${{ secrets.OCTOPUS_SERVER_URL }}
    - name: Generate Octopus Deploy build information
      uses: xo-energy/action-octopus-build-information@v1.1.2
      with:
        octopus_api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
        octopus_project: RandomQuotes-Ruby
        octopus_server: ${{ secrets.OCTOPUS_SERVER_URL }}
        push_version: ${{ steps.determine_version.outputs.semVer }}
        push_package_ids: RandomQuotes-Ruby
        output_path: octopus
    - name: Create Octopus Release
      uses: OctopusDeploy/create-release-action@v1.1.1
      with:
        api_key: ${{ secrets.OCTOPUS_API_TOKEN }}
        project: RandomQuotes-Ruby
        server: ${{ secrets.OCTOPUS_SERVER_URL }}
        deploy_to: Development
name: Ruby Build
'on':
  workflow_dispatch: {}
  push: {}
